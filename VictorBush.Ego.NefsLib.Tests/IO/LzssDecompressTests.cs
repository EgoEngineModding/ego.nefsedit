// See LICENSE.txt for license information.

using System.Text;
using VictorBush.Ego.NefsLib.IO;
using Xunit;

namespace VictorBush.Ego.NefsLib.Tests.IO;

public class LzssDecompressTests
{
	[Fact]
	public async Task Decompress_Test()
	{
		byte[] input = [
			0xFF, 0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65, 0xFF, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D,
			0x22, 0x31, 0xFF, 0x2E, 0x30, 0x22, 0x20, 0x73, 0x74, 0x61, 0x6E, 0xFF, 0x64, 0x61, 0x6C, 0x6F,
			0x6E, 0x65, 0x3D, 0x27, 0xFF, 0x79, 0x65, 0x73, 0x27, 0x20, 0x3F, 0x3E, 0x0D, 0xFF, 0x0A, 0x3C,
			0x53, 0x6B, 0x69, 0x70, 0x46, 0x72, 0xBF, 0x6F, 0x6E, 0x74, 0x45, 0x6E, 0x64, 0x14, 0x00, 0x09,
			0xFF, 0x3C, 0x50, 0x61, 0x72, 0x61, 0x6D, 0x65, 0x74, 0xEF, 0x65, 0x72, 0x20, 0x6E, 0x2C, 0x00,
			0x3D, 0x22, 0x73, 0xEE, 0x19, 0x00, 0x74, 0x6F, 0x67, 0x2C, 0x00, 0x22, 0x20, 0x76, 0x77, 0x61,
			0x6C, 0x75, 0x36, 0x00, 0x74, 0x72, 0x75, 0x42, 0x00, 0x05, 0x2F, 0x14, 0x01, 0x2F, 0x18, 0x0A
		];
		var expectedBytes = Encoding.ASCII.GetBytes("""
		                                      <?xml version="1.0" standalone='yes' ?>
		                                      <SkipFrontEnd>
		                                      	<Parameter name="skiptogame" value="true" />
		                                      </SkipFrontEnd>
		                                      """.ReplaceLineEndings("\r\n"));

		using var inputStream = new MemoryStream(input);
		var lzss = new LzssDecompress();

		// Test
		using var outputStream = new MemoryStream();
		await lzss.DecompressAsync(inputStream, outputStream, CancellationToken.None)
			.ConfigureAwait(false);

		// Verify
		var actualBytes = outputStream.ToArray();
		Assert.Equal(expectedBytes, actualBytes);
	}
}
